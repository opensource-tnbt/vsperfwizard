TRAFFICGEN = 'IxNet'
#TRAFFICGEN = 'Dummy'
RTE_TARGET = 'x86_64-native-linuxapp-gcc'

PATHS['dpdk']['src']['bind-tool'] = '*tools/dpdk*bind.py'

#OPNFV_URL = "http://testresults.opnfv.org/test/api/v1"

# Ixia/IxNet configuration
TRAFFICGEN_IXIA_CARD = '1'
TRAFFICGEN_IXIA_PORT1 = '5'
TRAFFICGEN_IXIA_PORT2 = '6'
#TRAFFICGEN_IXIA_PORT1 = '7'
#TRAFFICGEN_IXIA_PORT2 = '8'
TRAFFICGEN_IXIA_LIB_PATH = '/opt/ixnet/ixos-api/8.01.0.2/lib/ixTcl1.0'
TRAFFICGEN_IXNET_LIB_PATH = '/opt/ixnet/ixnetwork/8.01.1029.6/lib/IxTclNetwork'
# Ixia traffic generator
TRAFFICGEN_IXIA_HOST = '10.10.50.6'      # quad dotted ip address

# host where IxNetwork GUI/daemon runs
TRAFFICGEN_IXNET_MACHINE = '10.10.120.6'  # quad dotted ip address
TRAFFICGEN_IXNET_PORT = '9127'
TRAFFICGEN_IXNET_USER = 'vsperf_sandbox'

# paths to shared directory for IXIA_HOST and DUT (localhost)
TRAFFICGEN_IXNET_TESTER_RESULT_DIR = 'c:/ixia_results/vsperf_sandbox'
TRAFFICGEN_IXNET_DUT_RESULT_DIR = '/mnt/ixia_results/vsperf_sandbox'

#WHITELIST_NICS = ['02:00.0', '02:00.1']
WHITELIST_NICS = ['06:00.0', '06:00.1']
VSWITCH_BRIDGE_NAME = 'vsperf-br0'
#TRAFFICGEN_PKT_SIZES = (64, 128, 256, 512, 1024, 1280, 1518)
#TRAFFICGEN_PKT_SIZES = (1024, 1280, 1518)
TRAFFICGEN_PKT_SIZES = (64,)

############################
# VNF configuration
#############################
GUEST_IMAGE = ['/home/opnfv/vloop-vnf-ubuntu-16.04_trex_20180209.qcow2']

# release 10GB NICs from DPDK so Vanilla OVS tests can see them
import subprocess
import os
#subprocess.call('sudo bash -c "echo 8192 > /sys/devices/system/node/node0/hugepages/hugepages-2048kB/nr_hugepages"', shell=True)
#subprocess.call('sudo bash -c "echo 8192 > /sys/devices/system/node/node1/hugepages/hugepages-2048kB/nr_hugepages"', shell=True)
#subprocess.call('sudo bash -c "echo 0 > /sys/devices/system/node/node0/hugepages/hugepages-1048576kB/nr_hugepages"', shell=True)
#subprocess.call('sudo bash -c "echo 0 > /sys/devices/system/node/node1/hugepages/hugepages-1048576kB/nr_hugepages"', shell=True)
TMP_BIND_TOOL = os.path.join(PATHS['dpdk']['src']['path'], PATHS['dpdk']['src']['bind-tool'])
subprocess.call('sudo ' + TMP_BIND_TOOL + ' -u ' + ' '.join(WHITELIST_NICS), shell=True)
subprocess.call('sudo ' + TMP_BIND_TOOL + ' -b ixgbe ' + ' '.join(WHITELIST_NICS), shell=True)


# remove obsolete results
# subprocess.call('sudo rm -rf /mnt/ixia_results/vsperf_sandbox/rfctests/* 2>/dev/null', shell=True)
